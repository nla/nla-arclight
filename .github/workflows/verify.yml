# This workflow runs the unit and system tests, as well as static code analysis
# and dependecy vulnerability checks.
#
# It uses the default MySQL database included in the runner (usually ubuntu-latest).
name: "Tests and code quality"
on:
  push:
    branches:
      - "main"
      - "hotfix/*"
  pull_request:
    branches:
      - "main"
      - "hotfix/*"
jobs:
  linters:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-lint
      cancel-in-progress: true
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@v1

      - name: Install gems
        run: |
          bundle install

      - name: RuboCop
        run: |
          bundle exec rubocop --parallel

      - name: Brakeman code scanning
        run: |
          bundle exec brakeman -q -o tmp/brakeman.html
      - name: Bundler Audit check
        run: |
          bundle exec bundle audit check --update

  tests:
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-test
      cancel-in-progress: true
    name: Tests
    runs-on: ubuntu-latest
    env:
      CI: true
      DB_DATABASE: arclight_test
      DB_USER: root
      DB_PASSWORD: root
      RAILS_ENV: test
      DATABASE_URL: "mysql2://root:root@localhost:3306/arclight_test"
      PATRONS_DB_URL: "mysql2://root:root@localhost:3306/arclight_test"
      GETALIBRARYCARD_BASE_URL: "https://example.nla.gov.au"
      GETALIBRARYCARD_AUTH_PATH: "/getalibrarycard/authenticate.xml/%s/%s"
      GETALIBRARYCARD_PATRON_DETAILS_PATH: "/getalibrarycard/patrons/details/%s.xml"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby
        uses: ruby/setup-ruby@v1

      - name: Install gems
        run: |
          bundle install

      - name: Set up MySQL
        run: |
          pwd
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: RSpec tests
        run: |
          bundle exec rspec

      - name: Simplecov Report
        uses: aki77/simplecov-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          failedThreshold: 80
        if: ${{ github.actor != 'dependabot[bot]' }}
